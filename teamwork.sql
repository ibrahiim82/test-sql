-- ?1 ) WRITE A QUERY THAT RETURNS TRACK NAME AND ITS COMPOSER FROM TRACKS TABLE
--SELECT Name,Composer FROM Track
-- ? 2 ) WRITE A QUERY THAT RETURNS ALL COLUMNS FROM TRACKS TABLE
--SELECT * FROM Track
-- ? 3 ) WRITE A QUERY THAT RETURNS THE UNIQUE NAME OF COMPOSERS OF EACH TRACK
--SELECT DISTINCT Composer FROM Track
-- ? 4 ) WRITE A QUERY THAT RETURNS UNIQUE ALBUMID, MEDIATYPEID FROM TRACKS TABLE
--SELECT DISTINCT AlbumId,MediaTypeId FROM Track
-- ? 5 ) WRITE A QUERY THAT RETURNS TRACK NAME AND TRACKID OF ‘Jorge Ben’
--SELECT TrackId,Name FROM Track WHERE Composer = 'Jorge Be'
-- ? 6 ) WRITE A QUERY THAT RETURNS ALL INFO OF THE INVOICES OF WHICH TOTAL AMOUNT IS GREATER THAN $25
--SELECT * FROM Invoice WHERE total > 25
-- ? 7 ) WRITE A QUERY THAT RETURNS ALL INFO OF THE INVOICES OF WHICH TOTAL AMOUNT IS LESS THAN $15. JUST RETURN 5 ROWS
--SELECT * FROM Invoice WHERE total < 15 LIMIT 0,5
 -- ? 8 ) WRITE A QUERY THAT RETURNS ALL INFO OF THE INVOICES OF WHICH TOTAL AMOUNT IS GREATER THAN $10. THEN SORT THE TOTAL AMOUNTS IN DESCENDING ORDER, LASTLY DISPLAY TOP 2 ROWS
--SELECT * FROM Invoice WHERE total > 10 ORDER BY total DESC LIMIT 0,2
 -- ? 9 ) WRITE A QUERY THAT RETURNS ALL INFO OF THE INVOICES OF WHICH BILLING COUNTRY IS NOT CANADA. THEN SORT THE TOTAL AMOUNTS IN ASCENDING ORDER, LASTLY DISPLAY TOP 10 ROWS
 /*
 SELECT *
 FROM Invoice
 WHERE BillingCountry != 'Canada'
 ORDER BY total ASC
 LIMIT 0,10
 */
-- ? 10 ) WRITE A QUERY THAT RETURNS INVOICEID, CUSTOMERID AND TOTAL DOLLAR AMOUNT FOR EACH INVOICE. THEN SORT THEM FIRST BY CUSTOMERID IN ASCENDING, THEN TOTAL DOLLAR AMOUNT IN DESCENDING ORDER.
--SELECT InvoiceId,CustomerId,total FROM Invoice ORDER BY CustomerId,total DESC
-- ? 11 ) WRITE A QUERY THAT RETURNS ALL TRACK NAMES THAT START WITH ‘B’ AND END WITH ‘S’
--SELECT Name FROM Track WHERE Name LIKE 'b%' AND Name LIKE '%s'
-- ? 12 ) WRITE A QUERY THAT RETURNS THE NEWEST DATE AMONG THE INVOICE DATES BETWEEN 2008 AND 2011
/*
SELECT InvoiceDate
FROM Invoice
WHERE InvoiceDate
    BETWEEN '2008-01-01' AND '2011-12-31'
ORDER BY InvoiceDate DESC
LIMIT 0,1
*/
-- ? 13 ) WRITE A QUERY THAT RETURNS THE FIRST AND LAST NAME OF THE CUSTOMERS WHO HAVE ORDERS FROM NORWAY AND BELGIUM
--SELECT FirstName,LastName,Country FROM Customer WHERE Country IN ('Norway', 'Belgium') -- IN içerisinde harf duyarlılığı var !!!
-- ? 14 ) WRITE A QUERY THAT RETURNS THE TRACK NAMES OF ‘ZAPPA’
--SELECT Name,Composer FROM Track WHERE Composer LIKE '%ZAPPA%'
-- ? 15 ) HOW MANY TRACKS AND INVOICES ARE THERE IN THE DIGITAL MUSIC
--SELECT COUNT(*) FROM Track;
--SELECT COUNT(*) FROM Invoice
-- ? 16 ) HOW MANY COMPOSERS ARE THERE IN THE DIGITAL MUSIC STORE
--SELECT COUNT(DISTINCT Composer) FROM Track
-- ? 17 ) HOW MANY TRACKS DOES EACH ALBUM HAVE, DISPLAY ALBUMID AND NUMBER OF TRACKS SORTED FROM HIGHEST TO LOWEST
--SELECT AlbumId,COUNT(*) AS numberOfTracks FROM Track GROUP BY AlbumId ORDER BY numberOfTracks DESC
-- ? 18 ) WRITE A QUERY THAT RETURNS TRACK NAME HAVING THE MINIMUM AND MAXIMUM DURATION, DISPLAY SEPERATELY
--SELECT * FROM Track WHERE Milliseconds = ( SELECT MIN(Milliseconds) FROM Track) OR Milliseconds = ( SELECT MAX(Milliseconds) FROM Track);
--SELECT Name, MIN(Milliseconds) AS min, MAX(Milliseconds) AS max FROM Track;
/*
SELECT *
FROM(
(SELECT MAX(Milliseconds) enUzun,Name FROM Track),
(SELECT MIN (Milliseconds) enKisa,Name FROM Track)
)
*/
-- ? 19 ) WRITE A QUERY THAT RETURNS THE TRACKS HAVING DURATION LESS THAN THE AVERAGE DURATION
/*
SELECT *
FROM Track
WHERE Milliseconds < (SELECT AVG(Milliseconds) FROM Track)
*/
-- ? 20 ) WRITE A QUERY THAT RETURNS THE TOTAL NUMBER OF EACH COMPOSER’s TRACK.
-- ? 4 farklı yol
--SELECT Composer,COUNT(*) FROM Track WHERE Composer NOT IN ('NULL') GROUP BY Composer;
--SELECT Composer,COUNT(*) FROM Track WHERE Composer IS NOT NULL GROUP BY Composer
--SELECT Composer,COUNT(*) deneme FROM Track WHERE Composer != 'NULL' GROUP BY Composer
--SELECT Composer,COUNT(*) FROM Track GROUP BY Composer --Null olanları eklemek istersek bunu kullanabiliriz
-- ? 21 ) WRITE A QUERY THAT RETURNS THE GENRE OF EACH TRACK.
/*
SELECT track.Name,genre.Name
FROM Track
JOIN Genre ON Genre.GenreId = Track.GenreId
*/
-- ? 22 ) WRITE A QUERY THAT RETURNS THE ARTIST’s ALBUM INFO
/*
SELECT * FROM Artist
LEFT JOIN Album ON Album.ArtistId = Artist.ArtistId
*/
-- ? 23 ) WRITE A QUERY THAT RETURNS THE MINIMUM DURATION OF THE TRACK IN EACH ALBUM. DISPLAY ALBUMID, ALBUM TITLE AND DURATION OF THE TRACK. THEN SORT THEM FROM HIGHEST TO LOWEST
/*
SELECT Track.AlbumId,Album.Title,MIN(Track.Milliseconds) AS minDuration
FROM Track
JOIN Album ON Album.AlbumId = Track.AlbumId
GROUP BY Track.AlbumId,Album.Title
ORDER BY minDuration DESC
*/
-- ?  24 ) WRITE A QUERY THAT RETURNS ALBUMS WHOSE TOTAL DURATION IS HIGHER THAN 60 MIN. DISPLAY ALBUM TITLE AND THEIR DURATIONS. THEN SORT THE RESULT FROM HIGHEST TO LOWEST
/*
SELECT album.Title,SUM(track.Milliseconds) AS totalDuration FROM Track
JOIN Album ON Album.AlbumId = Track.AlbumId
GROUP BY Album.AlbumId
HAVING totalDuration > 3600000
ORDER BY totalDuration DESC
*/
-- ? 25 )  WRITE A QUERY THAT RETURNS TRACKID, TRACK NAME AND ALBUMID INFO OF THE ALBUM WHOSE TITLE ARE ‘Prenda Minha’, 'Heart of the Night' AND 'Out Of Exile'.
/*
SELECT Track.TrackId,Track.Name,Album.Title,Track.AlbumId FROM Track
JOIN Album ON Album.AlbumId = Track.AlbumId
WHERE album.Title IN ('Prenda Minha', 'Heart of the Night', 'Out Of Exile')
*/